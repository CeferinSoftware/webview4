version: 2.1

orbs:
  flutter: circleci/flutter@2.0.1
  android: circleci/android@2.3.0

parameters:
  app_name:
    type: string
    default: "Flutter App"
  package_name:
    type: string
    default: "com.example.app"
  app_url:
    type: string
    default: "https://example.com"
  target_platform:
    type: string
    default: "android"
  enable_chatbot:
    type: boolean
    default: false

jobs:
  build_android:
    executor:
      name: android/android-machine
      resource-class: large
      tag: 2023.07.1
    steps:
      - checkout
      - flutter/install_sdk_and_pub:
          version: 3.19.0
      - run:
          name: Setup Android SDK 35
          command: |
            sdkmanager "platforms;android-35"
            sdkmanager "build-tools;35.0.0"
      - run:
          name: Generate keystore
          command: |
            if [ -n "$KEYSTORE_PASSWORD" ]; then
              keytool -genkey -v -keystore android/app/key.jks \
                -keyalg RSA -keysize 2048 -validity 10000 \
                -alias $KEY_ALIAS \
                -storepass $KEYSTORE_PASSWORD \
                -keypass $KEY_PASSWORD \
                -dname "CN=<< pipeline.parameters.app_name >>, OU=Mobile, O=Company, L=City, S=State, C=US"
            fi
      - run:
          name: Create key.properties
          command: |
            if [ -n "$KEYSTORE_PASSWORD" ]; then
              echo "storePassword=$KEYSTORE_PASSWORD" > android/key.properties
              echo "keyPassword=$KEY_PASSWORD" >> android/key.properties
              echo "keyAlias=$KEY_ALIAS" >> android/key.properties
              echo "storeFile=key.jks" >> android/key.properties
            fi
      - run:
          name: Build Android APK
          command: flutter build apk --release --target-platform android-arm64
      - run:
          name: Build Android AAB
          command: flutter build appbundle --release --target-platform android-arm64
      - store_artifacts:
          path: build/app/outputs/flutter-apk/app-release.apk
          destination: app-release.apk
      - store_artifacts:
          path: build/app/outputs/bundle/release/app-release.aab
          destination: app-release.aab
      - store_artifacts:
          path: android/app/key.jks
          destination: keystore.jks

  build_ios:
    macos:
      xcode: 15.0.0
    steps:
      - checkout
      - flutter/install_sdk_and_pub:
          version: 3.19.0
      - run:
          name: Setup iOS certificates
          command: |
            if [ -n "$IOS_CERTIFICATE" ]; then
              echo $IOS_CERTIFICATE | base64 --decode > ios_certificate.p12
              echo $IOS_PROVISIONING_PROFILE | base64 --decode > ios_profile.mobileprovision
              
              # Install certificate
              security create-keychain -p "" build.keychain
              security import ios_certificate.p12 -k build.keychain -P "$IOS_CERTIFICATE_PASSWORD" -A
              security list-keychains -s build.keychain
              security default-keychain -s build.keychain
              security unlock-keychain -p "" build.keychain
              
              # Install provisioning profile
              mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
              cp ios_profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
            fi
      - run:
          name: Build iOS IPA
          command: |
            if [ -n "$IOS_CERTIFICATE" ]; then
              flutter build ipa --release
            else
              echo "iOS certificates not provided, skipping iOS build"
            fi
      - store_artifacts:
          path: build/ios/ipa/
          destination: ios-app

workflows:
  build_and_deploy:
    jobs:
      - build_android
      - build_android